// Generated by Dagger (https://dagger.dev).
package com.zandroid.mycalculator.di;

import com.zandroid.mycalculator.room.CalcDao;
import com.zandroid.mycalculator.room.CalcDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DatabaseModule_ProvideDaoFactory implements Factory<CalcDao> {
  private final Provider<CalcDatabase> dbProvider;

  public DatabaseModule_ProvideDaoFactory(Provider<CalcDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public CalcDao get() {
    return provideDao(dbProvider.get());
  }

  public static DatabaseModule_ProvideDaoFactory create(Provider<CalcDatabase> dbProvider) {
    return new DatabaseModule_ProvideDaoFactory(dbProvider);
  }

  public static CalcDao provideDao(CalcDatabase db) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideDao(db));
  }
}
